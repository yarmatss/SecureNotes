@page
@model EditModel
@{
    ViewData["Title"] = "Edit Note";
}

@section Styles {
    <link rel="stylesheet" href="~/lib/simplemde/simplemde.min.css" />
    <link rel="stylesheet" href="~/lib/fontawesome/css/font-awesome.min.css" />
}

<div id="passwordModal" class="modal @(Model.RequiresPassword ? "show" : "")"
     style="display: @(Model.RequiresPassword ? "block" : "none")">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Enter note password</h5>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <input type="password" id="decryptPassword" class="form-control" />
                    <div id="passwordError" class="text-danger mt-2"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="verifyPassword" class="btn btn-primary">Confirm</button>
            </div>
        </div>
    </div>
</div>

<div id="editForm" style="display: @(Model.RequiresPassword ? "none" : "block")">
    <h1>Edit note</h1>
    <form method="post">
        <div asp-validation-summary="All" class="text-danger"></div>

        <input type="hidden" asp-for="Note.Id" />
        <input type="hidden" asp-for="Note.IsEncrypted" />

        <div class="form-group mb-3">
            <label asp-for="Note.Title">Title</label>
            <input asp-for="Note.Title" class="form-control" />
            <span asp-validation-for="Note.Title" class="text-danger"></span>
        </div>

        <div class="form-group mb-3">
            <label asp-for="Note.Content">Content</label>
            <textarea id="markdown-editor" asp-for="Note.Content" class="form-control" rows="10"></textarea>
            <span asp-validation-for="Note.Content" class="text-danger"></span>
            <small class="form-text text-muted">
                Supported formatting:
                <strong>**bold**</strong>,
                <em>*italic*</em>,
                # Headers,
                [Links](url),
                ![Images](url)
            </small>
        </div>

        @if (Model.Note.IsEncrypted)
        {
            <input type="hidden" asp-for="Note.CurrentPassword" id="currentPassword" />

            <div class="form-group form-check mb-3">
                <input type="checkbox" class="form-check-input" asp-for="Note.ChangePassword" id="changePassword" />
                <label class="form-check-label" for="changePassword">Change password</label>
            </div>

            <div id="newPasswordSection" style="display:none;" class="form-group mb-3">
                <label asp-for="Note.NewPassword">Nowe hasło</label>
                <input type="password" class="form-control" asp-for="Note.NewPassword" />
                <div id="passwordStrength"></div>
                <span asp-validation-for="Note.NewPassword" class="text-danger"></span>
                <small class="form-text text-muted">
                    Password must have at least 12 characters and contain 3 of 4: capital letters, small letters, digits, special characters
                </small>
            </div>
        }

        <div class="form-group mb-3">
            <label asp-for="Note.AccessLevel">Access level</label>
            <select asp-for="Note.AccessLevel" asp-items="Html.GetEnumSelectList<NoteAccessLevel>()" class="form-control"></select>
            <span asp-validation-for="Note.AccessLevel" class="text-danger"></span>
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Save</button>
            <a asp-page="MyNotes" class="btn btn-secondary">Back</a>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/lib/simplemde/simplemde.min.js"></script>
    <script src="~/js/password-validation.js"></script>
    <script>
        $(function () {
            const headingLevels = {
                h1: { text: "H1", prefix: "# " },
                h2: { text: "H2", prefix: "## " },
                h3: { text: "H3", prefix: "### " },
                h4: { text: "H4", prefix: "#### " },
                h5: { text: "H5", prefix: "##### " }
            };

            function createHeadingAction(level) {
                return {
                    name: level,
                    action: (editor) => {
                        var cm = editor.codemirror;
                        var text = cm.getSelection();
                        cm.replaceSelection(headingLevels[level].prefix + text);
                    },
                    className: "fa fa-header",
                    title: `Heading ${headingLevels[level].text}`
                };
            }

            var simplemde = new SimpleMDE({
                element: document.getElementById("markdown-editor"),
                autoDownloadFontAwesome: false,
                spellChecker: false,
                toolbar: [
                    "bold", "italic", "|",
                    createHeadingAction("h1"),
                    createHeadingAction("h2"),
                    createHeadingAction("h3"),
                    createHeadingAction("h4"),
                    createHeadingAction("h5"),
                    "|",
                    "link", "image", "|",
                    "preview", "side-by-side", "fullscreen"
                ]
            });

            const passwordInput = $('#Note_NewPassword');
            const strengthDiv = $('#passwordStrength');

            passwordInput.on('input', function() {
                updatePasswordStrength(this.value, strengthDiv[0]);
            });

            $('#changePassword').change(function () {
                const newPasswordSection = $('#newPasswordSection');
                newPasswordSection.toggle(this.checked);
                if (!this.checked) {
                    passwordInput.val('');
                    strengthDiv.text('');
                }
            });

            $('#verifyPassword').click(async function() {
                const password = $('#decryptPassword').val();
                const noteId = $('#Note_Id').val();
                const token = $('input[name="__RequestVerificationToken"]').val();

                try {
                    const response = await fetch(`?handler=VerifyPassword`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': token
                        },
                        body: JSON.stringify({ id: noteId, password: password })
                    });

                    const data = await response.json();
                    if (data.success) {
                        $('#passwordModal').hide();
                        $('#editForm').show();
                        simplemde.value(data.content);
                        $('#currentPassword').val(password);
                    } else {
                        $('#passwordError').text(data.error);
                    }
                } catch (error) {
                    $('#passwordError').text('Error while veryfing password');
                }
            });
        });
    </script>
}